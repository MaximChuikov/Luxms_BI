@import "../../../ds_res/styles/variables.scss";

$width: 20px;
$height: 20px;

/* для элемента input c type="checkbox" */
.customCheckbox > input {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

/* для элемента label, связанного с .customCheckbox */
.customCheckbox > span {
  display: inline-flex;
  align-items: center;
  user-select: none;
}

/* создание в label псевдоэлемента before со следующими стилями */
.customCheckbox > span::before {
  content: "";
  display: inline-block;
  width: $width;
  height: $height;
  flex-shrink: 0;
  flex-grow: 0;
  border: 2px solid $white;
  border-radius: calc($width * 0.25);
  margin-right: calc($width * 0.5);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 50% 50%;
  background-color: $dark-gray;
}

/* стили при наведении курсора на checkbox */
.customCheckbox > input:not(:disabled):not(:checked) + span:hover::before {
  border-color: $light-gray;
}

/* стили при наведении курсора на checkbox в состоянии checked */
.customCheckbox > input:not(:disabled):checked + span:hover::before {
  border-color: $dark-gray;
}

/* стили для активного чекбокса (при нажатии на него) */
.customCheckbox > input:not(:disabled):active + span::before {
  background-color: $light-gray;
  border-color: $light-gray;
}

/* стили для чекбокса, находящегося в фокусе */
.customCheckbox > input:focus + span::before {
  // box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

/* стили для чекбокса, находящегося в фокусе и не находящегося в состоянии checked */
.customCheckbox > input:focus:not(:checked) + span::before {
  border-color: #80bdff;
}

/* стили для чекбокса, находящегося в состоянии checked */
.customCheckbox > input:checked + span::before {
  // border-color: $dark-gray;
  background-color: $light-gray;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
}

/* стили для чекбокса, находящегося в состоянии disabled */
.customCheckbox > input:disabled + span::before {
  background-color: #e9ecef;
}

/* для элемента input c type="radio" */
.customCheckboxCircle > input {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

/* для элемента label связанного с .customCheckboxCircle */
.customCheckboxCircle > span {
  display: inline-flex;
  align-items: center;
  user-select: none;
}

/* создание в label псевдоэлемента  before со следующими стилями */
.customCheckboxCircle > span::before {
  content: "";
  display: inline-block;
  width: $width;
  height: $height;
  flex-shrink: 0;
  flex-grow: 0;
  border: 2px solid $white;
  border-radius: 50%;
  margin-right: calc($width * 0.5);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 50% 50%;
  background-color: $dark-gray;
}

/* стили при наведении курсора на радио */
.customCheckboxCircle
  > input:not(:disabled):not(:checked)
  + span:hover::before {
  border-color: $light-gray;
}

/* стили для активной радиокнопки (при нажатии на неё) */
.customCheckboxCircle > input:not(:disabled):active + span::before {
  background-color: $light-gray;
  border-color: $light-gray;
}

/* стили для радиокнопки, находящейся в фокусе */
.customCheckboxCircle > input:focus + span::before {
  // box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

/* стили для радиокнопки, находящейся в фокусе и не находящейся в состоянии checked */
.customCheckboxCircle > input:focus:not(:checked) + span::before {
  border-color: #80bdff;
}

/* стили для радиокнопки, находящейся в состоянии checked */
.customCheckboxCircle > input:checked + span::before {
  border-color: $light-gray;
  // background-color: $light-gray;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='4' fill='white'/%3e%3c/svg%3e");
}

/* стили для радиокнопки, находящейся в состоянии disabled */
.customCheckboxCircle > input:disabled + span::before {
  background-color: #e9ecef;
}
